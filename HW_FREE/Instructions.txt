REQUIREMENTS
	- Python 3.8.10 (https://www.python.org/downloads/release/python-3810/)

INSTRUCTIONS

1. Create a virtual environment with required libraries

	1a) Open a terminal or command prompt and navigate to the directory containing this repository on your PC
	1b) Once you are there, create a virtual environment by typing the following command:
			python -m venv nameOfYourEnv
	1c) Activate the just created virtual environment by typing in the terminal:
		- For Windows: <env_name>\Scripts\activate.bat
		- For Unix/Linux: source <env_name>/bin/activate
	1d) Install the required libraries by running the following command:
	pip install -r "/[path to requirements]/requirements.txt"
	[note that the requirements.txt file is in the HW_FREE folder]
	1e) When the installations are completed, you may close the terminal.

2. In a code editor, go on "File", then "Open folder" and browse to the location where you downloaded this repository and select the HW_FREE folder, then hit "open" to open it.

3. Select the Python interpreter for the project:
	Open the command palette in your code editor (usually accessible through Ctrl + Shift + P).
	Search for "Python: Select Interpreter" and choose it.
	From the list of available interpreters, select the virtual environment you created in step 1. This will ensure that the project uses the correct Python version and libraries. If you do not see it in the list, navigate to the folder where you installed the virtual environment, then "bin", then select "python" as the interpreter.

4. The files:
	- deflation_method.py
	- inverse_power_method.py
are the implementation of the functions, which can be inspected for clarification. Inside each, you will find also a version of the same function but named with the extension "_test", which are used to test the function and they have slightly different output. Note that if you run these, you wont't get any output.

5. The file "utils.py" contains some useful functions that have been used to generate sparse matrices for the testing of the deflation_method and inverse_power_method.

6. The files:
	- deflation_method_test.py
	- inverse_power_method_test.py
when runned, output in the folder "figs" the graphs used in the report, with an extension indicating the timestamp. I left the folder "figs" empty, so when you will run these 2 files you will get the figures there.

Feel free to explore the code and modify it according to your needs. If you have any questions or need further clarification, please reach out.
